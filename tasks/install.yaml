---
- name: Include architecture mappings
  ansible.builtin.include_vars: architecture.yml

- name: Set platform-suffix for architecture
  ansible.builtin.set_fact:
    prometheus_platform_suffix: '{{ prometheus_arch[ansible_architecture] }}'

- name: Create group for prometheus node_exporter
  ansible.builtin.group:
    name: '{{ prometheus_node_exporter_group }}'
    state: present

- name: Create user for prometheus node_exporter
  ansible.builtin.user:
    name: "{{ prometheus_node_exporter_user }}"
    group: "{{ prometheus_node_exporter_group }}"
    create_home: false
    shell: /sbin/nologin
    comment: "Prometheus User"
    state: present

- name: Create directory for node_exporter
  ansible.builtin.file:
    path: '{{ prometheus_node_exporter_install_path }}'
    state: directory
    owner: '{{ prometheus_node_exporter_user }}'
    group: '{{ prometheus_node_exporter_group }}'
    mode: 0750

- name: Download and unarchive node_exporter tarball
  ansible.builtin.unarchive:
    src: '{{ prometheus_node_exporter_url }}'
    dest: '{{ prometheus_node_exporter_install_path }}'
    owner: '{{ prometheus_node_exporter_user }}'
    group: '{{ prometheus_node_exporter_group }}'
    copy: false
    creates: "{{ prometheus_node_exporter_install_path }}\
      /{{ prometheus_node_exporter_name }}\
      -{{ prometheus_node_exporter_version }}\
      .{{ prometheus_platform_suffix }}"
  notify:
    - Restart node_exporter

- name: Link current version
  ansible.builtin.file:
    state: link
    src: "{{ prometheus_node_exporter_install_path }}\
      /{{ prometheus_node_exporter_name }}\
      -{{ prometheus_node_exporter_version }}\
      .{{ prometheus_platform_suffix }}"
    dest: "{{ prometheus_node_exporter_install_path }}\
      /{{ prometheus_node_exporter_name }}"
  notify:
    - Restart node_exporter
    - Systemd reload node_exporter

- name: Copy node_exporter systemd unit file
  ansible.builtin.template:
    src: 'node_exporter.service.j2'
    dest: '/lib/systemd/system/{{ prometheus_node_exporter_name }}.service'
    owner: root
    group: root
    mode: 0644
  notify:
    - Systemd reload node_exporter
  when: ansible_service_mgr == "systemd"

- name: Copy node_exporter profile
  ansible.builtin.template:
    src: 'node_exporter.{{ ansible_service_mgr }}.j2'
    dest: '/etc/init.d/{{ prometheus_node_exporter_name }}'
    owner: root
    group: root
    mode: 0755
  notify:
    - Restart node_exporter
  when:
    - ansible_service_mgr == "sysvinit"
      or ansible_service_mgr == "openrc"

- name: Copy node_exporter startup defaults
  ansible.builtin.template:
    src: 'node_exporter.defaults.j2'
    dest: '/etc/default/{{ prometheus_node_exporter_name }}'
    owner: '{{ prometheus_node_exporter_user }}'
    group: '{{ prometheus_node_exporter_group }}'
    mode: 0640
  when: ansible_service_mgr == "systemd"
  notify:
    - Restart node_exporter

- name: Copy node_exporter startup config for openrc
  ansible.builtin.template:
    src: 'node_exporter.defaults.j2'
    dest: '/etc/conf.d/{{ prometheus_node_exporter_name }}'
    owner: '{{ prometheus_node_exporter_user }}'
    group: '{{ prometheus_node_exporter_group }}'
    mode: 0640
  when: ansible_service_mgr == "openrc"
  notify:
    - Restart node_exporter

- name: Enable service for node_exporter
  ansible.builtin.service:
    name: node_exporter
    state: started
    enabled: true

...
